diff --git a/GoLab2024/todo/main.go b/GoLab2024/todo/main.go
index 0470168..75b9053 100644
--- a/GoLab2024/todo/main.go
+++ b/GoLab2024/todo/main.go
@@ -3,16 +3,24 @@ package main
 import (
 	"fyne.io/fyne/v2"
 	"fyne.io/fyne/v2/app"
+	"fyne.io/fyne/v2/data/binding"
 )
 
 func main() {
 	a := app.NewWithID("io.fyne.workshop.todo")
 	w := a.NewWindow("TODO")
 
-	data := a.Preferences().StringListWithFallback("todos",
-		[]string{"Use this TODO list", "Build more Fyne apps"})
+	data := binding.NewStringList()
+	data.Set(a.Preferences().StringListWithFallback("todos",
+		[]string{"Use this TODO list", "Build more Fyne apps"}))
 	w.SetContent(makeUI(data))
 
+	// work around missing BindPreferenceString
+	data.AddListener(binding.NewDataListener(func() {
+		vals, _ := data.Get()
+		a.Preferences().SetStringList("todos", vals)
+	}))
+
 	w.Resize(fyne.NewSize(180, 240))
 	w.ShowAndRun()
 }
diff --git a/GoLab2024/todo/ui.go b/GoLab2024/todo/ui.go
index a93bfe8..cd1cfdd 100644
--- a/GoLab2024/todo/ui.go
+++ b/GoLab2024/todo/ui.go
@@ -1,26 +1,22 @@
 package main
 
 import (
-	"slices"
-
 	"fyne.io/fyne/v2"
 	"fyne.io/fyne/v2/container"
+	"fyne.io/fyne/v2/data/binding"
 	"fyne.io/fyne/v2/theme"
 	"fyne.io/fyne/v2/widget"
 )
 
-func makeUI(data []string) fyne.CanvasObject {
-	var list *widget.List
-	list = widget.NewList(
-		func() int {
-			return len(data)
-		},
+func makeUI(data binding.StringList) fyne.CanvasObject {
+	list := widget.NewListWithData(data,
 		func() fyne.CanvasObject {
 			return widget.NewCheck("An item title", nil)
 		},
-		func(i widget.ListItemID, co fyne.CanvasObject) {
+		func(di binding.DataItem, co fyne.CanvasObject) {
+			text, _ := di.(binding.String).Get()
 			ch := co.(*widget.Check)
-			ch.SetText(data[i])
+			ch.SetText(text)
 
 			ch.OnChanged = func(done bool) {
 				if !done {
@@ -28,9 +24,7 @@ func makeUI(data []string) fyne.CanvasObject {
 				}
 				ch.SetChecked(false)
 
-				data = slices.Delete(data, i, i+1)
-				list.Refresh()
-				fyne.CurrentApp().Preferences().SetStringList("todos", data)
+				data.Remove(text)
 			}
 		})
 
@@ -41,10 +35,8 @@ func makeUI(data []string) fyne.CanvasObject {
 				return
 			}
 
-			data = append(data, input.Text)
-			list.Refresh()
+			data.Append(input.Text)
 			input.SetText("")
-			fyne.CurrentApp().Preferences().SetStringList("todos", data)
 		})
 
 	top := container.NewBorder(nil, nil, nil, add, input)
